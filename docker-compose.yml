services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis
    environment:
      - FLASK_APP=app.py
      - FLASK_RUN_HOST=0.0.0.0
    volumes:
      - .:/app

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    depends_on:
      - db
      - redis
    volumes:
      - .:/app

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mfc_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  sync:
    build:
      context: .
      dockerfile: Dockerfile.sync_pg_chroma
    depends_on:
      - db
    environment:
      - FLASK_ENV=development
    restart: on-failure


volumes:
  postgres_data:
